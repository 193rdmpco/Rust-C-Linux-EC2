// propagate_exception.cpp
#include <chrono>
#include <exception>
#include <iostream>

void f30(int depth) {
    if (depth == 0) throw std::runtime_error("error");
    f30(depth - 1);
}

int main() {
    const int DEPTH = 30;
    const int ITERS = 10000;
    int caught = 0;

    auto t0 = std::chrono::high_resolution_clock::now();
    for (int i = 0; i < ITERS; ++i) {
        try {
            f30(DEPTH);
        } catch (...) {
            ++caught;
        }
    }
    auto ms = std::chrono::duration_cast<std::chrono::milliseconds>(
        std::chrono::high_resolution_clock::now() - t0
    ).count();

    std::cout
      << "caught=" << caught
      << " ms=" << ms
      << "\n";
    return 0;
}
