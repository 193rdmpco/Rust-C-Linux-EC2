#int_overflow C++
#include <iostream>
#include <chrono>
#include <cstdint>

int main() {
    const uint32_t ITERS = 100'000'000;
    uint32_t x = 0;
    uint32_t wraps = 0;

    auto t0 = std::chrono::high_resolution_clock::now();
    for (uint32_t i = 0; i < ITERS; ++i) {
        uint32_t old = x;
        x = x + 1;               // defined wrap for unsigned
        if (x <= old) ++wraps;   // detect overflow wrap
    }
    auto d = std::chrono::high_resolution_clock::now() - t0;

    std::cout
      << "Final x=" << x
      << " wraps=" << wraps
      << " time_ms="
      << std::chrono::duration_cast<std::chrono::milliseconds>(d).count()
      << "\n";
    return 0;
}
